{"version":3,"sources":["store/user.js","store/utils/reducerFunctions.js","store/conversations.js","store/activeConversation.js","store/index.js","themes/theme.js","socket.js","store/utils/thunkCreators.js","Signup.js","Login.js","components/Sidebar/ChatContent.js","components/Sidebar/CurrentUser.js","components/Sidebar/Search.js","components/Sidebar/Sidebar.js","components/Sidebar/SidebarContainer.js","components/Sidebar/Chat.js","components/Sidebar/BadgeAvatar.js","components/ActiveChat/SenderBubble.js","components/ActiveChat/OtherUserBubble.js","components/ActiveChat/ActiveChat.js","components/ActiveChat/Input.js","components/ActiveChat/Header.js","components/ActiveChat/Messages.js","components/Home.js","components/SnackbarError.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["GET_USER","SET_FETCHING_STATUS","gotUser","user","type","setFetchingStatus","isFetching","reducer","state","action","addMessageToStore","payload","message","sender","newConvo","id","conversationId","otherUser","messages","latestMessageText","text","map","convo","convoCopy","push","unreadCount","addOnlineUserToStore","online","removeOfflineUserFromStore","addSearchedUsersToStore","users","currentUsers","forEach","newState","fakeConvo","addNewConvoToStore","recipientId","updateMessage","length","GET_CONVERSATIONS","SET_MESSAGE","ADD_ONLINE_USER","REMOVE_OFFLINE_USER","SET_SEARCHED_USERS","CLEAR_SEARCHED_USERS","ADD_CONVERSATION","UPDATE_MESSAGE","conversations","filter","newMessage","SET_ACTIVE_CHAT","username","CLEAR_ON_LOGOUT","appReducer","combineReducers","activeConversation","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","undefined","applyMiddleware","thunkMiddleware","loggerMiddleware","theme","createTheme","typography","fontFamily","fontSize","button","textTransform","letterSpacing","fontWeight","overrides","MuiInput","input","palette","primary","main","secondary","socket","io","location","origin","on","console","log","store","dispatch","addOnlineUser","removeOfflineUser","data","axios","interceptors","request","use","a","config","localStorage","getItem","token","headers","saveMessage","body","post","sendMessage","emit","connect","register","credentials","setItem","error","response","props","history","useHistory","useState","formErrorMessage","setFormErrorMessage","handleRegister","event","preventDefault","target","value","email","password","confirmPassword","to","Grid","container","justifyContent","Box","item","Typography","Button","onClick","onSubmit","FormControl","TextField","label","name","required","inputProps","minLength","FormHelperText","variant","size","login","handleLogin","margin","useStyles","makeStyles","root","display","marginLeft","flexGrow","previewText","color","previewTextBold","ChatContent","classes","conversation","bold","className","height","marginTop","alignItems","subContainer","ellipsis","marginRight","opacity","BadgeAvatar","photoUrl","filledInput","background","borderRadius","marginBottom","Search","handleChange","fullWidth","hiddenLabel","FilledInput","onChange","disableUnderline","placeholder","startAdornment","InputAdornment","position","paddingLeft","paddingRight","title","searchTerm","includes","searchUsers","get","clearSearchedUsers","setSearchTerm","boxShadow","cursor","setActiveChat","updateConversation","chat","userId","put","handleClick","lastMessageSender","senderId","sidebar","Badge","badgeContent","profilePic","width","badge","border","backgroundColor","UserAvatar","anchorOrigin","horizontal","vertical","overlap","Avatar","alt","src","flexDirection","date","padding","bubble","avatar","SenderBubble","time","last","usernameDate","backgroundImage","OtherUserBubble","chatContainer","find","justifySelf","postMessage","setText","handleSubmit","reqBody","content","statusText","statusDot","Header","Messages","senderMessages","lastRead","moment","createdAt","format","logout","delete","removeItem","fetchConversations","isLoggedIn","setIsLoggedIn","useEffect","handleLogout","component","CssBaseline","snackbar","icon","SnackbarError","Snackbar","open","snackBarOpen","onClose","setSnackBarOpen","errorMessage","Fragment","ContentProps","withRouter","fetchUser","setErrorMessage","isFetchingUser","path","Login","Signup","exact","render","Home","App","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.489e50cc.chunk.js","sourcesContent":["// ACTIONS\n\nconst GET_USER = \"GET_USER\";\nconst SET_FETCHING_STATUS = \"SET_FETCHING_STATUS\";\n\n// ACTION CREATORS\n\nexport const gotUser = (user) => {\n  return {\n    type: GET_USER,\n    user\n  };\n};\n\nexport const setFetchingStatus = (isFetching) => ({\n  type: SET_FETCHING_STATUS,\n  isFetching\n});\n\n// REDUCER\n\nconst reducer = (state = { isFetching: true }, action) => {\n  switch (action.type) {\n    case GET_USER:\n      return action.user;\n    case SET_FETCHING_STATUS:\n      return {\n        ...state,\n        isFetching: action.isFetching\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const addMessageToStore = (state, payload) => {\n  const { message, sender } = payload;\n  // if sender isn't null, that means the message needs to be put in a brand new convo\n  if (sender !== null) {\n    const newConvo = {\n      id: message.conversationId,\n      otherUser: sender,\n      messages: [message],\n    };\n    newConvo.latestMessageText = message.text;\n    return [newConvo, ...state];\n  }\n\n  return state.map((convo) => {\n    if (message && convo.id === message.conversationId) {\n      const convoCopy = { ...convo };\n      convoCopy.messages.push(message);\n      convoCopy.latestMessageText = message.text;\n      convoCopy.unreadCount = message.unreadCount;\n      return convoCopy;\n    } else {\n      return convo;\n    }\n  });\n};\n\nexport const addOnlineUserToStore = (state, id) => {\n  return state.map((convo) => {\n    if (convo.otherUser.id === id) {\n      const convoCopy = { ...convo };\n      convoCopy.otherUser.online = true;\n      return convoCopy;\n    } else {\n      return convo;\n    }\n  });\n};\n\nexport const removeOfflineUserFromStore = (state, id) => {\n  return state.map((convo) => {\n    if (convo.otherUser.id === id) {\n      const convoCopy = { ...convo };\n      convoCopy.otherUser.online = false;\n      return convoCopy;\n    } else {\n      return convo;\n    }\n  });\n};\n\nexport const addSearchedUsersToStore = (state, users) => {\n  const currentUsers = {};\n\n  // make table of current users so we can lookup faster\n  state.forEach((convo) => {\n    currentUsers[convo.otherUser.id] = true;\n  });\n\n  const newState = [...state];\n  users.forEach((user) => {\n    // only create a fake convo if we don't already have a convo with this user\n    if (!currentUsers[user.id]) {\n      let fakeConvo = { otherUser: user, messages: [] };\n      newState.push(fakeConvo);\n    }\n  });\n\n  return newState;\n};\n\nexport const addNewConvoToStore = (state, recipientId, message) => {\n  return state.map((convo) => {\n    if (convo.otherUser.id === recipientId) {\n      convo.id = message.conversationId;\n      convo.messages.push(message);\n      convo.latestMessageText = message.text;\n      return convo;\n    } else {\n      return convo;\n    }\n  });\n};\n\nexport const updateMessage = (state, message) => {\n  return state.map((convo) => {\n    if (convo.id === message.conversationId) {\n      const convoCopy = { ...convo };\n      convoCopy.unreadCount = message.unreadCount;\n      convoCopy.messages[convoCopy.messages.length - 1].unreadCount =\n        message.unreadCount;\n      return convoCopy;\n    } else {\n      return convo;\n    }\n  });\n};\n","import {\n  addNewConvoToStore,\n  addOnlineUserToStore,\n  addSearchedUsersToStore,\n  removeOfflineUserFromStore,\n  addMessageToStore,\n  updateMessage,\n} from \"./utils/reducerFunctions\";\n\n// ACTIONS\n\nconst GET_CONVERSATIONS = \"GET_CONVERSATIONS\";\nconst SET_MESSAGE = \"SET_MESSAGE\";\nconst ADD_ONLINE_USER = \"ADD_ONLINE_USER\";\nconst REMOVE_OFFLINE_USER = \"REMOVE_OFFLINE_USER\";\nconst SET_SEARCHED_USERS = \"SET_SEARCHED_USERS\";\nconst CLEAR_SEARCHED_USERS = \"CLEAR_SEARCHED_USERS\";\nconst ADD_CONVERSATION = \"ADD_CONVERSATION\";\nconst UPDATE_MESSAGE = \"UPDATE_MESSAGE\"\n\n// ACTION CREATORS\n\nexport const gotConversations = (conversations) => {\n  return {\n    type: GET_CONVERSATIONS,\n    conversations,\n  };\n};\n\nexport const setNewMessage = (message, sender) => {\n  return {\n    type: SET_MESSAGE,\n    payload: { message, sender: sender || null },\n  };\n};\n\nexport const addOnlineUser = (id) => {\n  return {\n    type: ADD_ONLINE_USER,\n    id,\n  };\n};\n\nexport const removeOfflineUser = (id) => {\n  return {\n    type: REMOVE_OFFLINE_USER,\n    id,\n  };\n};\n\nexport const setSearchedUsers = (users) => {\n  return {\n    type: SET_SEARCHED_USERS,\n    users,\n  };\n};\n\nexport const clearSearchedUsers = () => {\n  return {\n    type: CLEAR_SEARCHED_USERS,\n  };\n};\n\n// add new conversation when sending a new message\nexport const addConversation = (recipientId, newMessage) => {\n  return {\n    type: ADD_CONVERSATION,\n    payload: { recipientId, newMessage },\n  };\n};\n\nexport const updateLastMessage = (message) => {\n  return {\n    type: UPDATE_MESSAGE,\n    message\n  }\n}\n\n// REDUCER\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case GET_CONVERSATIONS:\n      return action.conversations;\n    case SET_MESSAGE:\n      return addMessageToStore(state, action.payload);\n    case ADD_ONLINE_USER: {\n      return addOnlineUserToStore(state, action.id);\n    }\n    case REMOVE_OFFLINE_USER: {\n      return removeOfflineUserFromStore(state, action.id);\n    }\n    case SET_SEARCHED_USERS:\n      return addSearchedUsersToStore(state, action.users);\n    case CLEAR_SEARCHED_USERS:\n      return state.filter((convo) => convo.id);\n    case ADD_CONVERSATION:\n      return addNewConvoToStore(\n        state,\n        action.payload.recipientId,\n        action.payload.newMessage\n      );\n    case UPDATE_MESSAGE:\n      return updateMessage(state, action.message)\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","const SET_ACTIVE_CHAT = \"SET_ACTIVE_CHAT\";\n\nexport const setActiveChat = (username) => {\n  return {\n    type: SET_ACTIVE_CHAT,\n    username\n  };\n};\n\nconst reducer = (state = \"\", action) => {\n  switch (action.type) {\n    case SET_ACTIVE_CHAT: {\n      return action.username;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport loggerMiddleware from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\n\nimport user from \"./user\";\nimport conversations from \"./conversations\";\nimport activeConversation from \"./activeConversation\";\n\nconst CLEAR_ON_LOGOUT = \"CLEAR_ON_LOGOUT\";\n\nexport const clearOnLogout = () => {\n  return {\n    type: CLEAR_ON_LOGOUT\n  };\n};\n\nconst appReducer = combineReducers({\n  user,\n  conversations,\n  activeConversation\n});\nconst rootReducer = (state, action) => {\n  if (action.type === CLEAR_ON_LOGOUT) {\n    // set state to initial state\n    state = undefined;\n  }\n  return appReducer(state, action);\n};\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware, loggerMiddleware)));\n","import { createTheme } from \"@material-ui/core/styles\";\n\nexport const theme = createTheme({\n  typography: {\n    fontFamily: \"Open Sans, sans-serif\",\n    fontSize: 14,\n    button: {\n      textTransform: \"none\",\n      letterSpacing: 0,\n      fontWeight: \"bold\"\n    }\n  },\n  overrides: {\n    MuiInput: {\n      input: {\n        fontWeight: \"bold\"\n      }\n    }\n  },\n  palette: {\n    primary: { main: \"#3A8DFF\" },\n    secondary: { main: \"#B0B0B0\" }\n  }\n});\n","import io from \"socket.io-client\";\nimport store from \"./store\";\nimport {\n  setNewMessage,\n  removeOfflineUser,\n  addOnlineUser,\n} from \"./store/conversations\";\n\nconst socket = io(window.location.origin);\n\nsocket.on(\"connect\", () => {\n  console.log(\"connected to server\");\n\n  socket.on(\"add-online-user\", (id) => {\n    store.dispatch(addOnlineUser(id));\n  });\n\n  socket.on(\"remove-offline-user\", (id) => {\n    store.dispatch(removeOfflineUser(id));\n  });\n  socket.on(\"new-message\", (data) => {\n    store.dispatch(setNewMessage(data.message, data.sender));\n  });\n});\n\nexport default socket;\n","import axios from \"axios\";\nimport socket from \"../../socket\";\nimport {\n  gotConversations,\n  addConversation,\n  setSearchedUsers,\n  updateLastMessage\n} from \"../conversations\";\nimport { gotUser, setFetchingStatus } from \"../user\";\n\naxios.interceptors.request.use(async function (config) {\n  const token = await localStorage.getItem(\"messenger-token\");\n  config.headers[\"x-access-token\"] = token;\n\n  return config;\n});\n\n// USER THUNK CREATORS\n\nexport const fetchUser = () => async (dispatch) => {\n  dispatch(setFetchingStatus(true));\n  try {\n    const { data } = await axios.get(\"/auth/user\");\n    dispatch(gotUser(data));\n    if (data.id) {\n      socket.emit(\"go-online\", data.id);\n    }\n  } catch (error) {\n    console.error(error);\n  } finally {\n    dispatch(setFetchingStatus(false));\n  }\n};\n\nexport const register = (credentials) => async (dispatch) => {\n  try {\n    const { data } = await axios.post(\"/auth/register\", credentials);\n    await localStorage.setItem(\"messenger-token\", data.token);\n    dispatch(gotUser(data));\n    socket.emit(\"go-online\", data.id);\n  } catch (error) {\n    console.error(error);\n    dispatch(gotUser({ error: error.response.data.error || \"Server Error\" }));\n  }\n};\n\nexport const login = (credentials) => async (dispatch) => {\n  try {\n    const { data } = await axios.post(\"/auth/login\", credentials);\n    await localStorage.setItem(\"messenger-token\", data.token);\n    dispatch(gotUser(data));\n    socket.emit(\"go-online\", data.id);\n  } catch (error) {\n    console.error(error);\n    dispatch(gotUser({ error: error.response.data.error || \"Server Error\" }));\n  }\n};\n\nexport const logout = (id) => async (dispatch) => {\n  try {\n    await axios.delete(\"/auth/logout\");\n    await localStorage.removeItem(\"messenger-token\");\n    dispatch(gotUser({}));\n    socket.emit(\"logout\", id);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// CONVERSATIONS THUNK CREATORS\n\nexport const fetchConversations = () => async (dispatch) => {\n  try {\n    const { data } = await axios.get(\"/api/conversations\");\n    dispatch(gotConversations(data));\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst saveMessage = async (body) => {\n  const { data } = await axios.post(\"/api/messages\", body);\n  return data;\n};\n\nconst sendMessage = (data, body) => {\n   socket.emit(\"new-message\", {\n    message: data.message,\n    recipientId: body.recipientId,\n    sender: data.sender,\n  });\n};\n\n// message format to send: {recipientId, text, conversationId}\n// conversationId will be set to null if its a brand new conversation\nexport const postMessage = (body) => async (dispatch) => {\n  try {\n    const data = await saveMessage(body);   \n\n    if (!body.conversationId) {\n      dispatch(addConversation(body.recipientId, data.message));\n    } \n     sendMessage(data, body);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchUsers = (searchTerm) => async (dispatch) => {\n  try {\n    const { data } = await axios.get(`/api/users/${searchTerm}`);\n    dispatch(setSearchedUsers(data));\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const updateConversation = (userId, conversationId) => async  (dispatch) =>{\n  try{\n    const { data } = await axios.put(`/api/user-conversation`, {userId, conversationId})\n    dispatch(updateLastMessage(data))\n  } catch (error){\n    console.error(error);\n  }\n}\n","import React, { useState } from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Grid,\n  Box,\n  Typography,\n  Button,\n  FormControl,\n  TextField,\n  FormHelperText,\n} from \"@material-ui/core\";\nimport { register } from \"./store/utils/thunkCreators\";\n\nconst Login = (props) => {\n  const history = useHistory();\n  const { user, register } = props;\n  const [formErrorMessage, setFormErrorMessage] = useState({});\n\n  const handleRegister = async (event) => {\n    event.preventDefault();\n    const username = event.target.username.value;\n    const email = event.target.email.value;\n    const password = event.target.password.value;\n    const confirmPassword = event.target.confirmPassword.value;\n\n    if (password !== confirmPassword) {\n      setFormErrorMessage({ confirmPassword: \"Passwords must match\" });\n      return;\n    }\n\n    await register({ username, email, password });\n  };\n\n  if (user.id) {\n    return <Redirect to=\"/home\" />;\n  }\n\n  return (\n    <Grid container justifyContent=\"center\">\n      <Box>\n        <Grid container item>\n          <Typography>Need to log in?</Typography>\n          <Button onClick={() => history.push(\"/login\")}>Login</Button>\n        </Grid>\n        <form onSubmit={handleRegister}>\n          <Grid>\n            <Grid>\n              <FormControl>\n                <TextField\n                  aria-label=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  type=\"text\"\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid>\n              <FormControl>\n                <TextField\n                  label=\"E-mail address\"\n                  aria-label=\"e-mail address\"\n                  type=\"email\"\n                  name=\"email\"\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid>\n              <FormControl error={!!formErrorMessage.confirmPassword}>\n                <TextField\n                  aria-label=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  inputProps={{ minLength: 6 }}\n                  name=\"password\"\n                  required\n                />\n                <FormHelperText>\n                  {formErrorMessage.confirmPassword}\n                </FormHelperText>\n              </FormControl>\n            </Grid>\n            <Grid>\n              <FormControl error={!!formErrorMessage.confirmPassword}>\n                <TextField\n                  label=\"Confirm Password\"\n                  aria-label=\"confirm password\"\n                  type=\"password\"\n                  inputProps={{ minLength: 6 }}\n                  name=\"confirmPassword\"\n                  required\n                />\n                <FormHelperText>\n                  {formErrorMessage.confirmPassword}\n                </FormHelperText>\n              </FormControl>\n            </Grid>\n            <Button type=\"submit\" variant=\"contained\" size=\"large\">\n              Create\n            </Button>\n          </Grid>\n        </form>\n      </Box>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    register: (credentials) => {\n      dispatch(register(credentials));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Grid,\n  Box,\n  Typography,\n  Button,\n  FormControl,\n  TextField,\n} from \"@material-ui/core\";\nimport { login } from \"./store/utils/thunkCreators\";\n\nconst Login = (props) => {\n  const history = useHistory();\n  const { user, login } = props;\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    const username = event.target.username.value;\n    const password = event.target.password.value;\n\n    await login({ username, password });\n  };\n\n  if (user.id) {\n    return <Redirect to=\"/home\" />;\n  }\n\n  return (\n    <Grid container justifyContent=\"center\">\n      <Box>\n        <Grid container item>\n          <Typography>Need to register?</Typography>\n          <Button onClick={() => history.push(\"/register\")}>Register</Button>\n        </Grid>\n        <form onSubmit={handleLogin}>\n          <Grid>\n            <Grid>\n              <FormControl margin=\"normal\" required>\n                <TextField\n                  aria-label=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  type=\"text\"\n                />\n              </FormControl>\n            </Grid>\n            <FormControl margin=\"normal\" required>\n              <TextField\n                label=\"password\"\n                aria-label=\"password\"\n                type=\"password\"\n                name=\"password\"\n              />\n            </FormControl>\n            <Grid>\n              <Button type=\"submit\" variant=\"contained\" size=\"large\">\n                Login\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Box>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (credentials) => {\n      dispatch(login(credentials));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginLeft: 20,\n    flexGrow: 1,\n  },\n  username: {\n    fontWeight: \"bold\",\n    letterSpacing: -0.2,\n  },\n  previewText: {\n    fontSize: 12,\n    color: \"#9CADC8\",\n    letterSpacing: -0.17,\n  },\n  previewTextBold: {\n    fontSize: 12,\n    letterSpacing: -0.17,\n    fontWeight: \"bold\",\n  },\n}));\n\nconst ChatContent = (props) => {\n  const classes = useStyles();\n\n  const { conversation, bold } = props;\n  const { latestMessageText, otherUser } = conversation;\n\n  return (\n    <Box className={classes.root}>\n      <Box>\n        <Typography className={classes.username}>\n          {otherUser.username}\n        </Typography>\n        <Typography className={(bold && classes.previewTextBold) || classes.previewText }>\n          {latestMessageText}\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ChatContent;\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { BadgeAvatar } from \"./index\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: 44,\n    marginTop: 23,\n    marginLeft: 6,\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  subContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    flexGrow: 1\n  },\n  username: {\n    letterSpacing: -0.23,\n    fontSize: 16,\n    fontWeight: \"bold\",\n    marginLeft: 17\n  },\n  ellipsis: {\n    color: \"#95A7C4\",\n    marginRight: 24,\n    opacity: 0.5\n  }\n}));\n\nconst CurrentUser = (props) => {\n  const classes = useStyles();\n\n  const user = props.user || {};\n\n  return (\n    <Box className={classes.root}>\n      <BadgeAvatar photoUrl={user.photoUrl} online={true} />\n      <Box className={classes.subContainer}>\n        <Typography className={classes.username}>{user.username}</Typography>\n        <MoreHorizIcon classes={{ root: classes.ellipsis }} />\n      </Box>\n    </Box>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(CurrentUser);\n","import React from \"react\";\nimport { FormControl, FilledInput, InputAdornment } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  filledInput: {\n    height: 50,\n    background: \"#E9EEF9\",\n    borderRadius: 5,\n    fontSize: 13,\n    fontWeight: \"bold\",\n    color: \"#99A9C4\",\n    letterSpacing: 0,\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginBottom: 20\n  },\n  input: {\n    \"&::placeholder\": {\n      color: \"#ADC0DE\",\n      opacity: 1\n    }\n  }\n}));\n\nconst Search = (props) => {\n  const classes = useStyles();\n  const { handleChange } = props;\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormControl fullWidth hiddenLabel>\n        <FilledInput\n          name=\"search\"\n          onChange={handleChange}\n          classes={{ root: classes.filledInput, input: classes.input }}\n          disableUnderline\n          placeholder=\"Search\"\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          }></FilledInput>\n      </FormControl>\n    </form>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { Search, Chat, CurrentUser } from \"./index.js\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    paddingLeft: 21,\n    paddingRight: 21,\n    flexGrow: 1\n  },\n  title: {\n    fontSize: 20,\n    letterSpacing: -0.29,\n    fontWeight: \"bold\",\n    marginTop: 32,\n    marginBottom: 15\n  }\n}));\n\nconst Sidebar = (props) => {\n  const classes = useStyles();\n  const conversations = props.conversations || [];\n  const { handleChange, searchTerm, user, activeConversation } = props;\n\n  return (\n    <Box className={classes.root}>\n      <CurrentUser />\n      <Typography className={classes.title}>Chats</Typography>\n      <Search handleChange={handleChange} />\n      {conversations\n        .filter((conversation) => conversation.otherUser.username.includes(searchTerm))\n        .map((conversation) => {\n          return <Chat conversation={conversation} user={user} key={conversation.otherUser.username} activeConversation={activeConversation}/>;\n        })}\n    </Box>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    conversations: state.conversations,\n    user: state.user,\n    activeConversation: state.activeConversation\n  };\n};\n\nexport default connect(mapStateToProps)(Sidebar);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Sidebar } from \"./index\";\nimport { searchUsers } from \"../../store/utils/thunkCreators\";\nimport { clearSearchedUsers } from \"../../store/conversations\";\n\nconst SidebarContainer = (props) => {\n  const { searchUsers, clearSearchedUsers } = props;\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const handleChange = async (event) => {\n    if (event.target.value === \"\") {\n      // clear searched convos from redux store\n      clearSearchedUsers();\n      setSearchTerm(\"\");\n      return;\n    }\n    if (searchTerm.includes(event.target.value)) {\n      // if new value is included in search term, we don't need to make another API call, just need to set the search term value so the conversations can be filtered in the rendering\n      setSearchTerm(event.target.value);\n      return;\n    }\n    await searchUsers(event.target.value);\n    setSearchTerm(event.target.value);\n  };\n\n  return <Sidebar handleChange={handleChange} searchTerm={searchTerm} />;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    searchUsers: (username) => {\n      dispatch(searchUsers(username));\n    },\n    clearSearchedUsers: () => {\n      dispatch(clearSearchedUsers());\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SidebarContainer);\n","import React from \"react\";\nimport { Box, Badge } from \"@material-ui/core\";\nimport { BadgeAvatar, ChatContent } from \"../Sidebar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setActiveChat } from \"../../store/activeConversation\";\nimport { updateConversation } from \"../../store/utils/thunkCreators\";\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingRight: 20,\n    borderRadius: 8,\n    height: 80,\n    boxShadow: \"0 2px 10px 0 rgba(88,133,196,0.05)\",\n    marginBottom: 10,\n    display: \"flex\",\n    alignItems: \"center\",\n    \"&:hover\": {\n      cursor: \"grab\",\n    },\n  },\n}));\n\nconst Chat = (props) => {\n  const classes = useStyles();\n  const { user, conversation } = props;\n  const { otherUser } = conversation;\n\n  const handleClick = async (conversation) => {\n    await props.setActiveChat(conversation.otherUser.username);\n    await props.updateConversation(user.id, conversation.id);\n  };\n\n  const lastMessageSender =\n    conversation.messages.length > 0 &&\n    conversation.messages[conversation.messages.length - 1].senderId;\n  return (\n    <Box onClick={() => handleClick(conversation)} className={classes.root}>\n      <BadgeAvatar\n        photoUrl={otherUser.photoUrl}\n        username={otherUser.username}\n        online={otherUser.online}\n        sidebar={true}\n      />\n      <ChatContent\n        conversation={conversation}\n        bold={user.id !== lastMessageSender && conversation.unreadCount > 0}\n      />\n      {user.id !== lastMessageSender && (\n        <Badge color=\"primary\" badgeContent={conversation.unreadCount} />\n      )}\n    </Box>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setActiveChat: (id) => {\n      dispatch(setActiveChat(id));\n    },\n    updateConversation: (user, chat) => {\n      dispatch(updateConversation(user, chat));\n    },\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Chat);\n","import React from \"react\";\nimport { Box, Badge, Avatar } from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  profilePic: {\n    height: 44,\n    width: 44\n  },\n  badge: {\n    height: 13,\n    width: 13,\n    borderRadius: \"50%\",\n    border: \"2px solid white\",\n    backgroundColor: \"#D0DAE9\"\n  },\n  online: {\n    backgroundColor: \"#1CED84\"\n  },\n  sidebar: {\n    marginLeft: 17\n  }\n}));\n\nconst UserAvatar = (props) => {\n  const classes = useStyles();\n  const { sidebar, username, photoUrl, online } = props;\n\n  return (\n    <Box className={sidebar ? classes.sidebar : \"\"}>\n      <Badge\n        classes={{ badge: `${classes.badge} ${online && classes.online}` }}\n        variant=\"dot\"\n        anchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}\n        overlap=\"circular\">\n        <Avatar alt={username} src={photoUrl} className={classes.profilePic}></Avatar>\n      </Badge>\n    </Box>\n  );\n};\n\nexport default UserAvatar;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Typography, Avatar } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-end\"\n  },\n  date: {\n    fontSize: 11,\n    color: \"#BECCE2\",\n    fontWeight: \"bold\",\n    marginBottom: 5\n  },\n  text: {\n    fontSize: 14,\n    color: \"#91A3C0\",\n    letterSpacing: -0.2,\n    padding: 8,\n    fontWeight: \"bold\"\n  },\n  bubble: {\n    background: \"#F4F6FA\",\n    borderRadius: \"10px 10px 0 10px\"\n  },\n  avatar: {\n    height: 20,\n    width: 20,\n    marginTop: 4,\n    marginBottom: 20\n  },\n}));\n\nconst SenderBubble = (props) => {\n  const classes = useStyles();\n  const { time, text, otherUser, last } = props;\n  return (\n    <Box className={classes.root}>\n      <Typography className={classes.date}>{time}</Typography>\n      <Box className={classes.bubble}>\n        <Typography className={classes.text}>{text}</Typography>\n      </Box>\n      {last && \n      <Avatar alt={otherUser.username} src={otherUser.photoUrl} className={classes.avatar} />\n      }\n    </Box>\n  );\n};\n\nexport default SenderBubble;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Typography, Avatar } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\"\n  },\n  avatar: {\n    height: 30,\n    width: 30,\n    marginRight: 11,\n    marginTop: 6\n  },\n  usernameDate: {\n    fontSize: 11,\n    color: \"#BECCE2\",\n    fontWeight: \"bold\",\n    marginBottom: 5\n  },\n  bubble: {\n    backgroundImage: \"linear-gradient(225deg, #6CC1FF 0%, #3A8DFF 100%)\",\n    borderRadius: \"0 10px 10px 10px\"\n  },\n  text: {\n    fontSize: 14,\n    fontWeight: \"bold\",\n    color: \"#FFFFFF\",\n    letterSpacing: -0.2,\n    padding: 8\n  }\n}));\n\nconst OtherUserBubble = (props) => {\n  const classes = useStyles();\n  const { text, time, otherUser } = props;\n  return (\n    <Box className={classes.root}>\n      <Avatar alt={otherUser.username} src={otherUser.photoUrl} className={classes.avatar}></Avatar>\n      <Box>\n        <Typography className={classes.usernameDate}>\n          {otherUser.username} {time}\n        </Typography>\n        <Box className={classes.bubble}>\n          <Typography className={classes.text}>{text}</Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default OtherUserBubble;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box } from \"@material-ui/core\";\nimport { Input, Header, Messages } from \"./index\";\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexGrow: 8,\n    flexDirection: \"column\",\n  },\n  chatContainer: {\n    marginLeft: 41,\n    marginRight: 41,\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    justifyContent: \"space-between\",\n  },\n}));\n\nconst ActiveChat = (props) => {\n  const classes = useStyles();\n  const { user, conversations, activeConversation } = props;\n  const conversation =\n    conversations &&\n    conversations.find(\n      (conversation) => conversation.otherUser.username === activeConversation\n    );\n\n  return (\n    <Box className={classes.root}>\n      {conversation && (\n        <>\n          <Header\n            username={conversation.otherUser.username}\n            online={conversation.otherUser.online || false}\n          />\n          <Box className={classes.chatContainer}>\n            <Messages\n              unreadCount={conversation.unreadCount}\n              messages={conversation.messages}\n              otherUser={conversation.otherUser}\n              userId={user.id}\n            />\n            <Input\n              otherUser={conversation.otherUser}\n              conversationId={conversation.id}\n              user={user}\n            />\n          </Box>\n        </>\n      )}\n    </Box>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    conversations: state.conversations,\n    activeConversation: state.activeConversation,\n  };\n};\n\nexport default connect(mapStateToProps, null)(ActiveChat);\n","import React, { useState } from \"react\";\nimport { FormControl, FilledInput } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { postMessage } from \"../../store/utils/thunkCreators\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    justifySelf: \"flex-end\",\n    marginTop: 15\n  },\n  input: {\n    height: 70,\n    backgroundColor: \"#F4F6FA\",\n    borderRadius: 8,\n    marginBottom: 20\n  }\n}));\n\nconst Input = (props) => {\n  const classes = useStyles();\n  const [text, setText] = useState(\"\");\n  const { postMessage, otherUser, conversationId, user } = props;\n\n  const handleChange = (event) => {\n    setText(event.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    // add sender user info if posting to a brand new convo, so that the other user will have access to username, profile pic, etc.\n    const reqBody = {\n      text: event.target.text.value,\n      recipientId: otherUser.id,\n      conversationId,\n      sender: conversationId ? null : user\n    };\n    await postMessage(reqBody);\n    setText(\"\");\n  };\n\n  return (\n    <form className={classes.root} onSubmit={handleSubmit}>\n      <FormControl fullWidth hiddenLabel>\n        <FilledInput\n          classes={{ root: classes.input }}\n          disableUnderline\n          placeholder=\"Type something...\"\n          value={text}\n          name=\"text\"\n          onChange={handleChange}\n        />\n      </FormControl>\n    </form>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    postMessage: (message) => {\n      dispatch(postMessage(message));\n    },\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Input);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    height: 89,\n    marginBottom: 34,\n    boxShadow: \"0 2px 20px 0 rgba(88,133,196,0.10)\"\n  },\n  content: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginLeft: 24\n  },\n  username: {\n    fontSize: 20,\n    letterSpacing: -0.29,\n    fontWeight: \"bold\",\n    marginRight: 14\n  },\n  statusText: {\n    fontSize: 12,\n    color: \"#BFC9DB\",\n    letterSpacing: -0.17\n  },\n  statusDot: {\n    height: 8,\n    width: 8,\n    borderRadius: \"50%\",\n    marginRight: 5,\n    backgroundColor: \"#D0DAE9\"\n  },\n  online: {\n    background: \"#1CED84\"\n  },\n  ellipsis: {\n    color: \"#95A7C4\",\n    marginRight: 24,\n    opacity: 0.5\n  }\n}));\n\nconst Header = (props) => {\n  const classes = useStyles();\n  const { username, online } = props;\n\n  return (\n    <Box className={classes.root}>\n      <Box className={classes.content}>\n        <Typography className={classes.username}>{username}</Typography>\n        <Box className={`${classes.statusDot} ${classes[online && \"online\"]}`}></Box>\n        <Typography className={classes.statusText}>{online ? \"Online\" : \"Offline\"}</Typography>\n      </Box>\n      <MoreHorizIcon classes={{ root: classes.ellipsis }} />\n    </Box>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { SenderBubble, OtherUserBubble } from \"../ActiveChat\";\nimport moment from \"moment\";\n\nconst Messages = (props) => {\n  const { messages, otherUser, userId, unreadCount } = props;\n  const senderMessages = messages.filter(\n    (message) => message.senderId === userId\n  );\n  const lastRead = senderMessages[senderMessages.length - unreadCount - 1].id;\n\n  return (\n    <Box>\n      {messages.map((message) => {\n        const time = moment(message.createdAt).format(\"h:mm\");\n\n        return message.senderId === userId ? (\n          <SenderBubble\n            key={message.id}\n            text={message.text}\n            time={time}\n            otherUser={otherUser}\n            last={lastRead === message.id && unreadCount > 0}\n          />\n        ) : (\n          <OtherUserBubble\n            key={message.id}\n            text={message.text}\n            time={time}\n            otherUser={otherUser}\n          />\n        );\n      })}\n    </Box>\n  );\n};\n\nexport default Messages;\n","import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Grid, CssBaseline, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { SidebarContainer } from \"./Sidebar\";\nimport { ActiveChat } from \"./ActiveChat\";\nimport { logout, fetchConversations } from \"../store/utils/thunkCreators\";\nimport { clearOnLogout } from \"../store/index\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\"\n  }\n}));\n\nconst Home = (props) => {\n  const classes = useStyles();\n  const { user, logout, fetchConversations } = props;\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    if (user.id) {\n      setIsLoggedIn(true);\n    }\n  }, [user.id]);\n\n  useEffect(() => {\n    fetchConversations();\n  }, [fetchConversations]);\n\n  if (!user.id) {\n    // If we were previously logged in, redirect to login instead of register\n    if (isLoggedIn) return <Redirect to=\"/login\" />;\n    return <Redirect to=\"/register\" />;\n  }\n\n  const handleLogout = async () => {\n    await logout(user.id);\n  };\n\n  return (\n    <>\n      {/* logout button will eventually be in a dropdown next to username */}\n      <Button className={classes.logout} onClick={handleLogout}>\n        Logout\n      </Button>\n      <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <SidebarContainer />\n        <ActiveChat />\n      </Grid>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    conversations: state.conversations\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logout: (id) => {\n      dispatch(logout(id));\n      dispatch(clearOnLogout());\n    },\n    fetchConversations: () => {\n      dispatch(fetchConversations());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from \"react\";\nimport { Button, Snackbar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Close from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles((theme) => ({\n  snackbar: {\n    backgroundColor: \"red\",\n    fontWeight: \"bold\"\n  },\n  icon: {\n    color: \"white\"\n  }\n}));\n\nconst SnackbarError = (props) => {\n  const classes = useStyles();\n  return (\n    <Snackbar\n      open={props.snackBarOpen}\n      onClose={() => props.setSnackBarOpen(false)}\n      message={props.errorMessage || \"Sorry, an error occured. Please try again\"}\n      action={\n        <React.Fragment>\n          <Button\n            className={classes.icon}\n            size=\"small\"\n            onClick={() => props.setSnackBarOpen(false)}>\n            <Close color=\"secondary\" />\n          </Button>\n        </React.Fragment>\n      }\n      ContentProps={{\n        classes: {\n          root: classes.snackbar\n        }\n      }}\n    />\n  );\n};\n\nexport default SnackbarError;\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchUser } from \"./store/utils/thunkCreators\";\nimport Signup from \"./Signup.js\";\nimport Login from \"./Login.js\";\nimport { Home, SnackbarError } from \"./components\";\n\nconst Routes = (props) => {\n  const { user, fetchUser } = props;\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\n\n  useEffect(() => {\n    fetchUser();\n  }, [fetchUser]);\n\n  useEffect(() => {\n    if (user.error) {\n      // check to make sure error is what we expect, in case we get an unexpected server error object\n      if (typeof user.error === \"string\") {\n        setErrorMessage(user.error);\n      } else {\n        setErrorMessage(\"Internal Server Error. Please try again\");\n      }\n      setSnackBarOpen(true);\n    }\n  }, [user.error]);\n\n  if (props.user.isFetchingUser) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      {snackBarOpen && (\n        <SnackbarError\n          setSnackBarOpen={setSnackBarOpen}\n          errorMessage={errorMessage}\n          snackBarOpen={snackBarOpen}\n        />\n      )}\n      <Switch>\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Signup} />\n        <Route\n          exact\n          path=\"/\"\n          render={(props) => (props.user?.id ? <Home /> : <Signup />)}\n        />\n        <Route path=\"/home\" component={Home} />\n      </Switch>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchUser() {\n      dispatch(fetchUser());\n    },\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Routes));\n","import React from \"react\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport { theme } from \"./themes/theme\";\nimport Routes from \"./routes\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <MuiThemeProvider theme={theme}>\n        <BrowserRouter>\n          <Routes />\n        </BrowserRouter>\n      </MuiThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}